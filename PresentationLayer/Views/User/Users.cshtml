@model IEnumerable<PresentationLayer.Models.QueryViewModels.UserQueryViewModel>

@{
    string currentUpdatingUserName = "";
    ViewData["Title"] = "Users";
}

<h1>Users</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOfBirthday)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td id="user-id">
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirthday)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    <button class="btn-danger btnDelete" onclick="deleteUser(@item.Id)">Delete</button>
                </td>
                <td>
                    <button class="btn-warning btnEdit" data-bs-target="#modalUpdateUser" onclick="updateUser(@item.Id, @item.Name)">Edit</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="modalUpdateUser" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="lblModalUser">Editing @currentUpdatingUserName</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnInsert").click(function () {
            var id = $(this).attr('id-user');

            $.ajax({
                type: 'POST',
                url: '/User/Insert',
                data: json,
                contentType: 'application/json',
                dataType: 'html'
            });
        });
    });

    function deleteUser(id) {
        if (isIdValid(id)) {
            $.ajax({
                type: 'POST',
                url: "/User/Delete/",
                async: true,
                contentType: "application/json",
                dataType: "json",
                traditional: true,
                data: JSON.stringify(id)
            });
        }
    };

    function updateUser(id, itemName) {
        if (isIdValid(id)) {
            @currentUpdatingUserName = itemName;
            $.ajax({
                type: 'POST',
                url: "/User/Update/",
                async: true,
                //contentType: "application/json",
                //dataType: "json",
                traditional: true,
                data: JSON.stringify(id)
            });
        }
    };

    const isIdValid = (id) => {
        return id != undefined && id > 0;
    };
</script>
